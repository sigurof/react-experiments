{"version":3,"sources":["config/texts.tsx","component/welcome/WelcomeJumbo.tsx","bootstrap/list-group/ListGroup.tsx","routing/PagingLinking.tsx","component/canvas/Canvas.tsx","demos/canvas/DemoDrawer.ts","utils/collections.ts","demos/canvas/CanvasDemo.tsx","routing/routes.ts","demos/chords/Chords.tsx","component/front-page/FrontPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TextGetter","textStore","fallback","this","key","fb","undefined","withFallback","candidateText","_get","t","h1","WelcomeJumbo","Fragment","className","get","href","role","LG","children","LGHorizontal","id","PageRenderer","routeConfigs","map","it","index","path","component","LinkMenu","linkConfigs","to","link","exact","onClick","activeClassName","displayName","Canvas","draw","fallbackText","canvasId","canvasContainerId","canvasContext","useState","setCanvasContext","useEffect","cv","document","getElementById","ct","getContext","canvas","ctx","useCanvasAndContext","useDrawOnce","w","setW","canvasContainerElement","window","addEventListener","clientWidth","canvasContainer","width","requestAnimationFrame","resizeCanvas","useDrawOnResize","height","DrawAction","BLACK","MoveToInstr","props","moveTo","x","y","ArcInstr","arc","r","startAngle","endAngle","anticlockwise","ChordRenderer","col","drawFunc","fillStyle","from","beginPath","lineTo","stroke","dim","wBack","hBack","wBord","hBord","padding","xLowE","xHighE","yStartingPoints","name","value","yStartPointsObj","array","keyMapper","valueMapper","ob","el","arrayToObject","stringNames","split","nStrings","length","stringDistance","xPosStrings","hLines","fretsStart","stringTrailStarts","stringFromToSpec","bottomPartStarts","topLeft","topRight","plus","filledIn","fillRect","strokedIn","strokeRect","forEach","drawLine","textAlign","textBaseline","font","desiredTextMiddle","topPartStart","fillText","drawBoundary","strokeStyle","Draw","clearRect","fill","n","i","randomColor","intBetween","twoPi","Math","PI","halfPi","c","incs","x0","x1","some","other","values","_","join","min","max","floor","random","CANVAS_CONTAINER_ID","drawToCanvas","d","triangle","randomSquares","experimentDraw","rectangularExample","drawSmiley","drawCMajor","CanvasDemo","console","log","canvasLinks","canvasRoutes","HOME_PAGE","CANVAS_PAGE","CHORDS_PAGE","FrontPage","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e3b06e16.chunk.js","sourcesContent":["import _get from 'lodash/get'\n\nexport interface stringToStringObj {\n    [key: string]: string\n}\n\nexport const texts: stringToStringObj = {\n    'no.sigurof.tab.text.c-dur': 'C-dur',\n    'no.sigurof.tab.text.d-dur': 'D-dur',\n    'no.sigurof.tab.text.e-dur': 'E-dur',\n    'no.sigurof.tab.text.f-dur': 'F-dur',\n    'no.sigurof.tab.text.g-dur': 'G-dur',\n    'no.sigurof.tab.text.a-dur': 'A-dur',\n    'no.sigurof.tab.text.h-dur': 'H-dur',\n\n    'no.sigurof.tab.pane.text.c-dur': 'This means C-major',\n    'no.sigurof.tab.pane.text.d-dur': 'Means D-major',\n    'no.sigurof.tab.pane.text.e-dur': 'E-dur is not E minor',\n    'no.sigurof.tab.pane.text.f-dur': 'Is a musical scale',\n    'no.sigurof.tab.pane.text.g-dur': 'Is playable on the piano',\n    'no.sigurof.tab.pane.text.a-dur': 'What more is there to say',\n    'no.sigurof.tab.pane.text.h-dur': 'Do you understand what dur means now?',\n}\n\nexport function getTextGlobal(key: string): string {\n    return _get(texts, key)\n}\n\nexport function getText(texts: stringToStringObj, key: string): string | null {\n    return _get(texts, key)\n}\n\nexport class TextGetter {\n    private readonly textStore: stringToStringObj | undefined\n    private readonly fallback: string | undefined\n\n    constructor(textStore: stringToStringObj, fallback?: string) {\n        this.textStore = textStore\n        this.fallback = fallback\n    }\n\n    get(key: string): string  {\n        const fb = this.fallback === undefined ? '' : this.fallback\n        return this.withFallback(key, fb)\n    }\n\n    withFallback(key: string, fallback: string): string {\n        const candidateText: string | undefined = _get(this.textStore, key)\n        return candidateText !== undefined ? candidateText : fallback\n    }\n}\n","import React from 'react'\nimport { TextGetter } from '../../config/texts'\n\nconst t = new TextGetter(\n    {\n        h1: 'Welcome!',\n        'p-about-contents':\n            'This page contains my different React experiments.',\n        'p-welcome-to-explore':\n            'You are welcome to explore by clicking the buttons.',\n        'a-button': 'A button',\n    },\n    '[Content missing]'\n)\n\nexport const WelcomeJumbo: React.FC = () => (\n    <React.Fragment>\n        <div className=\"jumbotron\">\n            <h1 className=\"display-4\">{t.get('h1')}</h1>\n            <p className=\"lead\">{t.get('p-about-contents')}</p>\n            <hr className=\"my-4\" />\n            <p>{t.get('p-welcome-to-explore')}</p>\n            <a\n                className=\"btn btn-primary btn-lg\"\n                href=\"#jumbotron\"\n                role=\"button\"\n            >\n                {t.get('a-button')}\n            </a>\n        </div>\n    </React.Fragment>\n)\n","import React from 'react'\n\nexport const LG: React.FC = ({ children }) => (\n    <div className=\"list-group\">{children}</div>\n)\n\ninterface LGHorizontalProps {\n    id?: string\n    role?: string\n    children?: React.ReactChild | React.ReactChild[]\n}\n\nexport const LGHorizontal: React.FC<LGHorizontalProps> = ({\n    id,\n    role,\n    children,\n}: LGHorizontalProps) => (\n    <ul className=\"list-group list-group-horizontal\" id={id} role={role}>{children}</ul>\n)\n","import React from 'react'\nimport { NavLink, Route, Switch } from 'react-router-dom'\nimport { LinkConfig, RouteConfig } from './Routing'\n\ninterface LinkMenuProps {\n    linkConfigs: LinkConfig[]\n}\n\ninterface PageRendererProps {\n    routeConfigs: RouteConfig[]\n}\n\nexport const PageRenderer: React.FC<PageRendererProps> = ({\n    routeConfigs,\n}: PageRendererProps) => {\n    return (\n        <Switch>\n            {routeConfigs.map((it, index) => (\n                <Route key={index} path={it.path}>\n                    <it.component />\n                </Route>\n            ))}\n        </Switch>\n    )\n}\n\nexport const LinkMenu: React.FC<LinkMenuProps> = ({\n    linkConfigs,\n}: LinkMenuProps) => {\n    return (\n        <React.Fragment>\n            {linkConfigs.map((it, index) => {\n                return (\n                    <NavLink\n                        to={it.link}\n                        key={index}\n                        exact={it.exact}\n                        onClick={it.onClick}\n                        activeClassName=\"active\"\n                        className=\"list-group-item list-group-item-action\"\n                    >\n                        {it.displayName}\n                    </NavLink>\n                )\n            })}\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport type CanvasContext = {\n    canvas: HTMLCanvasElement\n    ctx: CanvasRenderingContext2D\n}\n\ninterface CanvasProps {\n    draw: (canvasContext: CanvasContext) => void\n    fallbackText: string\n    canvasId: string\n    canvasContainerId: string\n}\n\ninterface contextAndDraw {\n    canvasContext: CanvasContext | null\n    draw: (canvasContext: CanvasContext) => void\n    canvasContainerId?: string\n}\n\nexport const Canvas: React.FC<CanvasProps> = ({\n    draw,\n    fallbackText,\n    canvasId,\n    canvasContainerId,\n}: CanvasProps) => {\n    const canvasContext = useCanvasAndContext(canvasId)\n    useDrawOnce({ canvasContext, draw })\n    useDrawOnResize({ canvasContext, draw, canvasContainerId })\n    return (\n        <div>\n            <div id={canvasContainerId}>\n                <canvas id={canvasId} height={1000}>\n                    {fallbackText}\n                </canvas>\n            </div>\n        </div>\n    )\n}\n\nfunction useCanvasAndContext(canvasId: string) {\n    const [canvasContext, setCanvasContext] = useState(\n        (): {\n            canvas: HTMLCanvasElement\n            ctx: CanvasRenderingContext2D\n        } | null => null\n    )\n    useEffect(() => {\n        const cv = document.getElementById(canvasId) as HTMLCanvasElement\n        const ct = cv?.getContext('2d') as CanvasRenderingContext2D\n        setCanvasContext({\n            canvas: cv,\n            ctx: ct,\n        })\n    }, [canvasId])\n    return canvasContext\n}\n\nfunction useDrawOnce({ canvasContext, draw }: contextAndDraw) {\n    useEffect(() => {\n        if (!!canvasContext?.ctx) draw(canvasContext)\n    }, [draw, canvasContext])\n}\n\nfunction useDrawOnResize({\n    canvasContext,\n    draw,\n    canvasContainerId,\n}: contextAndDraw) {\n    const [w, setW] = useState(0)\n    useEffect(() => {\n        let canvasContainerElement = document.getElementById(\n            canvasContainerId!!\n        ) as HTMLElement\n        window.addEventListener('resize', () => {\n            if (!!canvasContainerElement)\n                setW(canvasContainerElement?.clientWidth)\n        })\n    }, [canvasContainerId])\n    useEffect(() => {\n        let canvasContainerElement = document.getElementById(\n            canvasContainerId!!\n        ) as HTMLElement\n        if (!!canvasContext?.canvas && !!canvasContext?.ctx)\n            resizeCanvas(canvasContext, canvasContainerElement, draw)\n    }, [w, draw, canvasContext, canvasContainerId])\n}\n\nfunction resizeCanvas(\n    { canvas, ctx }: CanvasContext,\n    canvasContainer: HTMLElement,\n    draw: (canvasContext: CanvasContext) => void\n) {\n    canvas.width = canvasContainer.clientWidth - 2\n    window.requestAnimationFrame(() => draw({ canvas, ctx }))\n}\n","import { CanvasContext } from '../../component/canvas/Canvas'\nimport { arrayToObject } from '../../utils/collections'\n\nexport interface CanvasDemoProps {\n    canvasId: string\n    canvasContainerId: string\n    fallbackText: string\n}\nexport interface posXY {\n    x: number\n    y: number\n}\n\nenum DrawAction {\n    ARC,\n    MOVE_TO,\n}\n\ninterface Pair<T> {\n    some: T\n    other: T\n}\n\ninterface PathInstruction {\n    draw: (ctx: CanvasRenderingContext2D) => void\n}\n\nconst LIGHT_GREY = 'rgb(230, 230, 230)'\nconst GREY = 'rgb(150, 150, 150)'\nconst BLACK = 'rgb(0, 0, 0)'\nconst RED = 'rgb(255, 0, 0)'\nconst GOLDEN_YELLOW = '#ffd700'\n// interface ArcInstr  extends PathInstruction{\n//     pos: posXY,\n//     rad: number,\n//     startAngle: number,\n//     endAngle: number,\n//     ac: boolean\n// }\n\ninterface MoveToInstrProps {\n    x: number\n    y: number\n}\n\nclass MoveToInstr implements PathInstruction {\n    props: MoveToInstrProps\n    constructor(props: MoveToInstrProps) {\n        this.props = props\n    }\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.moveTo(this.props.x, this.props.y)\n    }\n}\n\ninterface ArcInstrProps {\n    x: number\n    y: number\n    r: number\n    startAngle: number\n    endAngle: number\n    anticlockwise?: boolean\n}\n\nclass ArcInstr implements PathInstruction {\n    props: ArcInstrProps\n    constructor(props: ArcInstrProps) {\n        this.props = props\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.arc(\n            this.props.x,\n            this.props.y,\n            this.props.r,\n            this.props.startAngle,\n            this.props.endAngle,\n            this.props.anticlockwise\n        )\n    }\n}\n\nclass xyBuilder {\n    private x: number\n    private y: number\n    constructor(x: number, y: number) {\n        this.x = x\n        this.y = y\n    }\n    dx(dx: number) {\n        this.x += dx\n    }\n    dy(dy: number) {\n        this.y += dy\n    }\n    dxy(dx: number, dy: number) {\n        this.x += dx\n        this.y += dy\n    }\n    dpos({ dx, dy }: { dx: number; dy: number }) {\n        this.x += dx\n        this.y += dy\n    }\n    build() {\n        return { x: this.x, y: this.y }\n    }\n}\n\nexport class ChordRenderer{\n    private readonly ctx: CanvasRenderingContext2D\n    private readonly canvas: HTMLCanvasElement\n    private readonly width: number\n    constructor({ ctx, canvas }: CanvasContext) {\n        this.ctx = ctx\n        this.canvas = canvas\n        this.width = canvas.width\n    }\n\n    filledIn(col: string, drawFunc: () => void) {\n        this.ctx.fillStyle = col\n        drawFunc()\n    }\n\n    drawLine(from: posXY, to: posXY) {\n        this.ctx.beginPath()\n        this.ctx.moveTo(from.x, from.y)\n        this.ctx.lineTo(to.x, to.y)\n        this.ctx.stroke()\n    }\n\n    drawCMajor({ x, y }: posXY, dim: number) {\n        const chordName = 'C-major'\n        const wBack = dim\n        const hBack = dim\n        const wBord = dim\n        const hBord = dim\n        const padFraction = 7\n        const padding = dim / padFraction // How much inwards from the border the strings should be\n        const xLowE = x + padding // x coordinate of low e string\n        const xHighE = x + wBord - padding // x coordinate of high e string\n        const yStartingPoints = [\n            { name: 'topPadStart', value: 0.0 }, // 0.05\n            { name: 'topPartStart', value: 0.07 }, // 0.15\n            { name: 'fretsStart', value: 0.23 }, // 0.50\n            { name: 'stringTrailStarts', value: 0.82 }, // 0.05\n            { name: 'bottomPartStarts', value: 0.88 }, // 0.05\n            { name: 'bottomPadStarts', value: 0.93 }, // 0.20\n        ].map(it => ({\n            ...it,\n            value: it.value * dim + y,\n        }))\n        const yStartPointsObj = arrayToObject(\n            yStartingPoints,\n            el => el.name,\n            el => el.value\n        )\n        const stringNames = 'E, A, D, G, H, E'.split(', ')\n        const nStrings = stringNames.length\n        const stringDistance = (xHighE - xLowE) / (nStrings - 1)\n        const xPosStrings = stringNames.map(\n            (it, index) => xLowE + index * stringDistance\n        )\n        const hGuideLines = yStartingPoints.map(it => ({\n            from: { x: xLowE, y: it.value },\n            to: { x: xHighE, y: it.value },\n        }))\n        const hLines = [\n            yStartPointsObj.fretsStart,\n            yStartPointsObj.stringTrailStarts,\n        ].map(it => ({\n            from: { x: xLowE, y: it },\n            to: { x: xHighE, y: it },\n        }))\n        const stringFromToSpec = xPosStrings.map(it => ({\n            from: { x: it, y: yStartPointsObj.fretsStart },\n            to: { x: it, y: yStartPointsObj.bottomPartStarts },\n        }))\n        const topLeft = { x, y }\n\n        const topRight = plus(topLeft, { x: wBord, y: 0 })\n        const bottomLeft = plus(topLeft, { x: 0, y: hBord })\n        const bottomRight = plus(topLeft, { x: wBord, y: hBord })\n        const neckTopLeft = plus(topLeft, { x: padding, y: padding })\n        const neckTopRight = plus(topRight, { x: -padding, y: padding })\n        // Background\n        this.filledIn(LIGHT_GREY, () => this.ctx.fillRect(x, y, wBack, hBack))\n        // Ramme\n        this.strokedIn(RED, () => this.ctx.strokeRect(x, y, wBord, hBord))\n        // Frets\n        this.strokedIn(BLACK, () =>\n            hLines.forEach(it => this.drawLine(it.from, it.to))\n        )\n        // Guitar strings\n        this.strokedIn(BLACK, () =>\n            stringFromToSpec.forEach(it => this.drawLine(it.from, it.to))\n        )\n        // Chord name\n        this.ctx.textAlign = \"center\"\n        this.ctx.textBaseline = \"middle\"\n        this.ctx.font = '48px times new roman'\n        // const textMetrics = this.ctx.measureText(chordName)\n        const desiredTextMiddle = {x: (xLowE + xHighE) / 2, y: (yStartPointsObj.topPartStart + yStartPointsObj.fretsStart)/2 }\n        this.filledIn(BLACK, () =>\n            this.ctx.fillText(chordName, desiredTextMiddle.x, desiredTextMiddle.y)\n        )\n        // const textLow = textMetrics.actualBoundingBoxDescent\n        // const text\n\n        // this.in(black, () => this.drawLine(neckTopLeft, neckTopRight))\n        // this.in(black, () => this.drawLine())\n    }\n\n    draw({ x, y }: posXY, dim: number){\n        this.drawBoundary({ x, y })\n        // this.drawFrets()\n        // this.drawStrings()\n        // this.drawGrip()\n        // this.drawChordName()\n    }\n\n    private strokedIn(col: string, drawFunc: () => void) {\n        this.ctx.strokeStyle = col\n        drawFunc()\n    }\n\n    private drawBoundary({ x, y }: posXY) {\n        // this.filledIn(LIGHT_GREY, () => this.ctx.fillRect(x, y, wBack, hBack))\n    }\n}\n\nexport class Draw {\n    private readonly ctx: CanvasRenderingContext2D\n    private readonly canvas: HTMLCanvasElement\n    private readonly width: number\n    constructor({ ctx, canvas }: CanvasContext) {\n        this.ctx = ctx\n        this.canvas = canvas\n        this.width = canvas.width\n    }\n\n    rectangularExample({ x, y }: posXY) {\n        this.ctx.fillRect(x, y, 100, 100)\n        this.ctx.clearRect(x + 20, y + 20, 60, 60)\n        this.ctx.strokeRect(x + 25, y + 24, 50, 50)\n    }\n\n    triangle() {\n        this.ctx.moveTo(75, 50)\n        this.ctx.lineTo(100, 75)\n        this.ctx.lineTo(100, 25)\n        this.ctx.fill()\n    }\n\n    randomSquares(n: number) {\n        for (let i = 0; i < n; i++) {\n            const w = 50\n            const h = 50\n            this.ctx.fillStyle = randomColor()\n            this.ctx.fillRect(\n                intBetween(0, this.width - 50),\n                intBetween(50, 500),\n                w,\n                h\n            )\n        }\n    }\n\n    drawSmiley({ x, y }: posXY) {\n        const twoPi = Math.PI * 2\n        const pi = Math.PI\n        const halfPi = Math.PI / 2\n        const c = { x, y }\n        const instructions: PathInstruction[] = [\n            new ArcInstr({\n                x: c.x,\n                y: c.y,\n                r: 50,\n                startAngle: 0,\n                endAngle: twoPi,\n            }),\n            new MoveToInstr({ x: c.x, y: c.y }),\n            new ArcInstr({ x: x, y: y, r: 25, startAngle: 0, endAngle: twoPi }),\n        ]\n\n        // instructions.forEach((it, index) => it.draw(this.ctx))\n        const incs = [{ x: 0, y: -10 }]\n        this.ctx.beginPath()\n        this.ctx.arc(c.x, c.y, 50, 0, twoPi, true) // Outer circle\n        this.ctx.moveTo(c.x + 5, c.y + incs[0].y - 5)\n        this.ctx.arc(c.x + 5, c.y + incs[0].y, 5, -halfPi, halfPi, false) // Mouth (clockwise)\n        this.ctx.moveTo(c.x - 10, c.y - 10)\n        this.ctx.arc(c.x - 15, c.y - 10, 5, 0, Math.PI * 2, true) // Left eye\n        this.ctx.moveTo(c.x + 20, c.y - 10)\n        this.ctx.arc(c.x + 15, c.y - 10, 5, 0, Math.PI * 2, true) // Right eye\n        this.ctx.stroke()\n    }\n\n    filledIn(col: string, drawFunc: () => void) {\n        this.ctx.fillStyle = col\n        drawFunc()\n    }\n\n    private strokedIn(col: string, drawFunc: () => void) {\n        this.ctx.strokeStyle = col\n        drawFunc()\n    }\n\n    drawLine(from: posXY, to: posXY) {\n        this.ctx.beginPath()\n        this.ctx.moveTo(from.x, from.y)\n        this.ctx.lineTo(to.x, to.y)\n        this.ctx.stroke()\n    }\n\n    horizontal(x0: number, x1: number, y: number) {\n        this.drawLine({ x: x0, y }, { x: x1, y })\n    }\n\n}\n\n\nfunction plus(some: posXY, other: posXY) {\n    return { x: some.x + other.x, y: some.y + other.y }\n}\n\nfunction randomColor(): string {\n    const values = 'r,g,b'\n        .split(',')\n        .map(_ => intBetween(0, 255))\n        .join(', ')\n    return `rgb(${values})`\n}\n\nfunction intBetween(min: number, max: number): number {\n    return Math.floor(Math.random() * (+max - +min)) + +min\n}\n","export function arrayToObject<T, U>(\r\n    array: T[],\r\n    keyMapper: (el: T) => string,\r\n    valueMapper: (el: T) => U\r\n): { [key: string]: U } {\r\n    let ob: { [key: string]: U } = {}\r\n    for (const el of array) {\r\n        ob[keyMapper(el)] = valueMapper(el)\r\n    }\r\n    return ob\r\n}\r\n","import React from 'react'\nimport './CanvasDemo.css'\n\nimport { TextGetter } from '../../config/texts'\nimport { LG } from '../../bootstrap/list-group/ListGroup'\n\nimport { canvasLinks, canvasRoutes } from '../../routing/routes'\nimport { LinkMenu, PageRenderer } from '../../routing/PagingLinking'\nimport { Canvas, CanvasContext } from '../../component/canvas/Canvas'\nimport { ChordRenderer, Draw } from './DemoDrawer'\n\nconst CANVAS_ID = 'my-first-canvas'\nconst CANVAS_CONTAINER_ID = `canvas-container-${CANVAS_ID}`\n\nconst t = new TextGetter(\n    {\n        'canvas-fallback-message': 'Unable to display content.',\n    },\n    '[Content missing]'\n)\n\nexport const ExperimentCanvas: React.FC = () => (\n    <Canvas\n        draw={experimentDraw}\n        fallbackText={t.get('canvas-fallback-text')}\n        canvasId={CANVAS_ID}\n        canvasContainerId={CANVAS_CONTAINER_ID}\n    />\n)\n\nexport const SquaresCanvas: React.FC = () => (\n    <div id=\"squares-wrapper\">\n        <Canvas\n            draw={drawToCanvas}\n            fallbackText={t.get('canvas-fallback-text')}\n            canvasId={CANVAS_ID}\n            canvasContainerId={CANVAS_CONTAINER_ID}\n        />\n    </div>\n)\n\nfunction drawToCanvas({ ctx, canvas }: CanvasContext) {\n    const d = new Draw({ ctx, canvas })\n    d.triangle()\n    d.randomSquares(50)\n}\n\nfunction experimentDraw({ ctx, canvas }: CanvasContext) {\n    const d = new Draw({ ctx, canvas })\n    const c = new ChordRenderer({ctx, canvas})\n    d.rectangularExample({ x: 50, y: 50 })\n    d.drawSmiley({ x: 250, y: 75 })\n    c.drawCMajor({ x: 50, y: 250 }, 500)\n}\n\nexport const CanvasDemo: React.FC = () => {\n    console.log('Canvas')\n    return (\n        <React.Fragment>\n            <div className=\"row\">\n                <div className=\"col-2\">\n                    <nav>\n                        <LG>\n                            <LinkMenu linkConfigs={canvasLinks} />\n                        </LG>\n                    </nav>\n                </div>\n                <div className=\"col-10\">\n                    <PageRenderer routeConfigs={canvasRoutes} />\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import { LinkConfig, RouteConfig } from './Routing'\nimport { Chords } from '../demos/chords/Chords'\nimport { ExperimentCanvas, SquaresCanvas } from '../demos/canvas/CanvasDemo'\n\nexport const HOME_PAGE = '/sigurof/react-experiments/'\nexport const FRONT_PAGE = HOME_PAGE + 'front/'\nexport const CANVAS_PAGE = HOME_PAGE + 'canvas/'\n\nexport const CHORDS_PAGE = HOME_PAGE + 'chords/'\n\nexport const SQUARES_CANVAS_PAGE = CANVAS_PAGE + 'squares/'\nexport const EXPERIMENT_CANVAS_PAGE = CANVAS_PAGE + 'experiments/'\n\nexport const canvasRoutes: RouteConfig[] = [\n    {\n        path: SQUARES_CANVAS_PAGE,\n        component: SquaresCanvas,\n    },\n    {\n        path: EXPERIMENT_CANVAS_PAGE,\n        component: ExperimentCanvas,\n    },\n]\n\nexport const canvasLinks = [\n    {\n        link: HOME_PAGE,\n        displayName: 'Back home',\n        exact: true,\n    },\n    {\n        link: SQUARES_CANVAS_PAGE,\n        displayName: 'Squares',\n        exact: true,\n    },\n    {\n        link: EXPERIMENT_CANVAS_PAGE,\n        displayName: 'Experiment',\n        exact: true,\n    },\n]\n\n\nexport const linkConfigs: LinkConfig[] = [\n    {\n        exact: true,\n        displayName: 'Front',\n        link: FRONT_PAGE,\n    },\n    {\n        displayName: 'Chords',\n        link: CHORDS_PAGE,\n    },\n    {\n        displayName: 'Canvas',\n        link: CANVAS_PAGE,\n    },\n]\n\nexport const routeConfigs: RouteConfig[] = [\n    {\n        path: CHORDS_PAGE,\n        component: Chords,\n    },\n]\n","import React from 'react'\n\nexport const Chords: React.FC = () =>{\n    return (\n        <div>Chords</div>\n    )\n}","import React from 'react'\nimport { WelcomeJumbo } from '../welcome/WelcomeJumbo'\nimport { LGHorizontal } from '../../bootstrap/list-group/ListGroup'\nimport { LinkMenu, PageRenderer } from '../../routing/PagingLinking'\nimport { linkConfigs, routeConfigs } from '../../routing/routes'\n\nexport const FrontPage: React.FC = () => {\n    return (\n        <div>\n            <WelcomeJumbo />\n            <nav>\n                <LGHorizontal>\n                    <LinkMenu linkConfigs={linkConfigs} />\n                </LGHorizontal>\n            </nav>\n            <PageRenderer routeConfigs={routeConfigs} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { FrontPage } from './component/front-page/FrontPage'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { CanvasDemo } from './demos/canvas/CanvasDemo'\nimport { CANVAS_PAGE, HOME_PAGE } from './routing/routes'\n\nfunction App(): React.FunctionComponentElement<any> {\n    return (\n        <Router>\n            <Route path={HOME_PAGE}>\n                <FrontPage/>\n            </Route>\n            <Route path={CANVAS_PAGE}>\n                <CanvasDemo />\n            </Route>\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n// @ts-ignore\nimport React from 'react';\n// @ts-ignore\nimport ReactDOM from 'react-dom';\n// @ts-ignore\nimport App from './App';\n// @ts-ignore\nimport * as serviceWorker from './serviceWorker';\n\n// @ts-ignore\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}